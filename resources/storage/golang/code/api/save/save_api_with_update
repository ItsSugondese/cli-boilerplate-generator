func (s *?lService) Save?uService(ctx *gin.Context, ?ldto dto.?uRequest) dto.?uResponse {
	tx := database.DB.Begin()
	tx = tx.WithContext(ctx)


	var ?lDetails model.?u

	if ?ldto.ID != uuid.Nil {
		?lDetails = ?snake_navigator.Find?uByIdService(?ldto.ID)
	}

	dto_utils.DtoConvertErrorHandled(?ldto, &?lDetails)

	var saved?u model.?u
	var save?uError error

	if ?ldto.ID == uuid.Nil {
		saved?u, save?uError = generic_repo.SaveRepo(tx, ?lDetails)
	} else {
		saved?u, save?uError = generic_repo.UpdateRepo(tx, ?lDetails)
	}

	if save?uError != nil {
		tx.Rollback()
		panic(save?uError)
	}

	if err := tx.Commit().Error; err != nil {
		tx.Rollback()
		panic(err)
	}

	var response dto.?uResponse
    dto_utils.DtoConvertErrorHandled(saved?u, &response)

    return response // Successfully return the saved ?swag
}